name: Node CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'node-app/**'
      - '.github/workflows/node-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'node-app/**'
      - '.github/workflows/node-ci.yml'
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: node-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: node-app

    steps:
      - name: Checkout
      .uses: actions/checkout@v4

      - name: Setup Node.js (with smart cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          # Use globs so the cache step never errors if a specific lockfile path is missing
          cache-dependency-path: |
            **/package-lock.json
            **/pnpm-lock.yaml
            **/yarn.lock

      # ---------- Install ----------
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "Detected npm lockfile"
            npm ci
          elif [ -f pnpm-lock.yaml ]; then
            echo "Detected pnpm lockfile"
            npm i -g pnpm
            pnpm i --frozen-lockfile
          elif [ -f yarn.lock ]; then
            echo "Detected yarn lockfile"
            npm i -g yarn
            yarn install --frozen-lockfile
          else
            echo "No lockfile found; running npm install (non-deterministic)"
            npm install
          fi

      # ---------- Tests (supports Jest if present) ----------
      - name: Run tests
        env:
          # If your project has jest-junit installed, this will produce junit.xml
          JEST_JUNIT_OUTPUT: junit.xml
        run: |
          if npm run | grep -qE '^  test'; then
            # Prefer explicit Jest invocation if present in package.json
            if node -e "process.exit(!require('./package.json').devDependencies?.jest && !require('./package.json').dependencies?.jest)" 2>/dev/null; then
              echo "Running Jest (will try to use jest-junit reporter if available)"
              npx --yes jest --ci --reporters=default --reporters=jest-junit --coverage || npm test --if-present
            else
              echo "Running npm test"
              npm test --if-present
            fi
          else
            echo "No test script defined; skipping tests."
          fi

      # ---------- Build (optional) ----------
      - name: Build
        run: |
          if npm run | grep -qE '^  build'; then
            npm run build
          else
            echo "No build script found; skipping build."
          fi

      # ---------- Artifacts ----------
      - name: Upload build artifact (dist/ or build/)
        uses: actions/upload-artifact@v4
        with:
          name: node-build-${{ github.run_number }}
          path: |
            node-app/dist/**
            node-app/build/**
            node-app/package.json
            node-app/package-lock.json
            node-app/pnpm-lock.yaml
            node-app/yarn.lock
          if-no-files-found: warn
          retention-days: 14

      - name: Upload test report (JUnit if present)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-tests-${{ github.run_number }}
          path: |
            node-app/junit.xml
            node-app/test-results/**
          if-no-files-found: warn
          retention-days: 14

      - name: Upload coverage (if present)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-coverage-${{ github.run_number }}
          path: |
            node-app/coverage/**
            node-app/coverage/lcov.info
          if-no-files-found: warn
          retention-days: 14
